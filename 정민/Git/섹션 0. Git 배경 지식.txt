< GIT 역사 및 배경지식 >

• 유닉스: 대형 컴퓨터를 위해서 나온 운영체제 
 -> 개인용 컴퓨터에 맞는 OS로 발전: 리눅스

• GNU: General Public License (공개 소프트웨어 프로젝트)
 - 리눅스는 GNU다.
 - 내가 만드는 것을 누구에게나 공개하겠다.
   단, 이거를 사용하면 무조건 GPL 라이센스를 따라야 한다.
   : A 소프트웨어 -> B 소프트웨어 (A 소프트웨어 발전) - 무조건 공개되어야 한다.

• 리눅스 버전 관리: BitKeeper라는 DVCS(Distribution Version Control System, 분산 버전 관리 시스템) 상용 -> 유료화
-> BitKeeper 기술을 바탕으로 Git을 만듦
  - GNU, GPL (General Public License)


• Github: 개발자들의 코드가 저장되는 클라우드 저장소
 - Public: 공개
 - Private: 비공개
 - Mit 라이센스를 따름
   : 공개된 소스 코드로 업그레이드 개발을 했다 -> 공개할 의무는 없다.



< 버전 관리 시스템 >
• VCS (Version Control System)
 - 파일의 수정했던 기록(버전)들을 저장
 - 특정 수정 시점으로 파일을 돌릴 수 있음
 - 단점: 바이러스 걸리면 끝, 협업이 안됨 (로컬에서만 관리)

• CVCS (Centralized Version Control System, 중앙 집중형 버전 관리 시스템)
 - 파일들은 오직 서버에만 저장하고, 프로젝트의 참여자들은 작업을 진행할 때 서버로부터 프로젝트의 파일들을 내려받은 후 수정하여 다시 서버로 올리는 방식
 - 단점: 협업을 잘해야 한다. (수정된 데이터가 다 날라갈 수도)
             서버에 문제가 생길 경우, 문제 발생\
 - history가 없음

• DVCS (Distributed Version Control System, 분산형 버전 관리 시스템)
 - 파일을 서버와 각 로컬에 분산하여 저장할 수 있기 때문에, 어느 한쪽에 문제가 생겨 파일이 손상되거나 히스토리가 지워지더라도 다른 쪽에서 받아오면 되기 때문에  쉽게 복구 가능
 - history를 로컬도 가지고 있음

